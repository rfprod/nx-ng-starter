# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: docker

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Dry run (do not push containers to the registry): true / false'
        required: true
        default: 'false'

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.head_ref }}.${{ github.sha }}.docker
  cancel-in-progress: true

jobs:
  docker-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Print inputs
        run: |
          echo "Deployment Environment: ${{ github.event.inputs.dryRun }}"

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Don't save Bash session history
        run: unset HISTFILE

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Configure kernel (increase watchers)
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Use yarn 1.22.18 (required for integrity check)
        run: yarn set version 1.22.18 # this is mandatory, yarn v2 does not have integrity check which is needed for the pipeline

      - name: Get variables (yarn cache directory path, commit hash)
        id: get-variables
        run: echo "::set-output name=yarncachedir::$(yarn cache dir)"; echo "::set-output name=commitsha::$(echo ${GITHUB_SHA})"

      - name: Workspace cache (npm, yarn, nx, jest)
        uses: actions/cache@v2
        id: workspace-cache # use this to check for `cache-hit` (`steps.workspace-cache.outputs.cache-hit != 'true'`)
        env:
          cache-name: workspace-cache
        with:
          path: |
            ./node_modules
            /tmp/nx
            /tmp/jest_rs
            ./angular
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}-workspace-${{ steps.get-variables.outputs.commitsha }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}-workspace-
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
            ${{ runner.os }}-

      - name: Install global dependencies
        run: npm i -g @compodoc/compodoc

      - name: Workspace integrity check
        run: yarn workspace:integrity-check

      - name: Install project dependencies
        run: yarn install:ci

      - name: Unit test all (with code coverage)
        run: |
          npx nx run-many --target=test --all --pass-with-no-tests --code-coverage=true --watch=false --run-in-band --ci
          npx nx run tools:coverage-stats
          cat ./tools/ts/UNIT_COVERAGE.md

      - name: Build all (production)
        run: |
          yarn generate:env:documentation
          npx nx run-many --target=build --all --configuration production

      - name: Build documentation (compodoc, unit coverage, e2e coverage)
        run: |
          yarn test:reports
          npx nx run tools:compodoc-build
          yarn generate:changelog
          yarn e2e:headless:report

      - name: Docker login
        run: yarn docker:login "$DOCKER_REGISTRY_USER" "$DOCKER_REGISTRY_ACCESS_TOKEN"
        env:
          DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
          DOCKER_REGISTRY_ACCESS_TOKEN: ${{ secrets.DOCKER_REGISTRY_ACCESS_TOKEN }}

      - name: Docker build apps
        run: |
          yarn docker:build base
          yarn docker:build api production
          yarn docker:build client production
          yarn docker:build elements production
          yarn docker:build documentation

      - name: Docker push apps
        if: github.event.inputs.dryRun == 'false'
        run: |
          yarn docker:push base
          echo "TODO - Push docker images to the regitry"

      - name: Docker cleanup
        if: always()
        run: |
          yarn docker:cleanup
          docker logout
