# This workflow will do a clean install of node dependencies, and will run all Nx e2e apps using Cypress
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: nx-e2e

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'local'

defaults:
  run:
    shell: bash

jobs:
  e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Print inputs
        run: |
          echo "Deployment Environment: ${{ github.event.inputs.environment }}"

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Don't save Bash session history
        run: unset HISTFILE

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Configure kernel (increase watchers)
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Get variables (yarn cache directory path, commit hash)
        id: get-variables
        run: echo "::set-output name=yarncachedir::$(yarn cache dir)"; echo "::set-output name=commitsha::$(echo ${GITHUB_SHA})"

      - name: Workspace cache (npm, yarn, nx, jest)
        uses: actions/cache@v2
        id: workspace-cache # use this to check for `cache-hit` (`steps.workspace-cache.outputs.cache-hit != 'true'`)
        env:
          cache-name: workspace-cache
        with:
          path: |
            ~/.npm
            ${{ steps.get-variables.outputs.yarncachedir }}
            **/node_modules
            /tmp/nx
            /tmp/jest_rs
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}-workspace-${{ steps.get-variables.outputs.commitsha }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}-workspace-
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
            ${{ runner.os }}-

      - name: Install global dependencies
        run: npm i -g typescript @angular/cli @nrwl/cli

      - name: Workspace integrity check
        run: yarn workspace:integrity-check

      - name: Install project dependencies
        run: yarn install --frozen-lockfile

      - name: Install Cypress
        run: npx cypress install

      - name: E2E all
        run: npx nx run-many --target=e2e --all --headless
