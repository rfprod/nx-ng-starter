# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: pr-validation

on:
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.head_ref }}.${{ github.sha }}.pr-validation
  cancel-in-progress: true

jobs:
  premerge:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            nx:
              - '.github/workflows/pr-validation.yml'
              - 'apps/**'
              - 'libs/**'
              - 'tools/generators/**'
              - 'tools/ts/**'
              - 'tools/*.json'
              - 'tsconfig*'
              - 'nx.json'
              - 'angular.json'
              - 'babel.config.json'
              - 'package.json'
              - 'functions/package.json'
              - 'jest*'
              - '.eslint*'
              - '.prettier*'
              - '.protolint.yaml'
              - '.stylelint*'
            dependencies:
              - 'yarn.lock'
              - 'functions/package-lock.json'
            electron:
              - '.electron/**'
              - 'index.js'
            mobile:
              - 'android/**'
              - 'capacitor.config.json'
            shelltools:
              - 'tools/shell/**'
            storybook:
              - '.storybook/**'
              - '*.stories.ts'

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ matrix.node-version }}

      - name: Validate the commit messages
        run: |
          git checkout -b premerge
          git fetch origin main:main
          npx --no-install commitlint --from main

      - name: Lint affected
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: npx nx affected --target=lint --base=origin/main --head=HEAD --parallel --max-parallel=2

      - name: Lint shell
        if: steps.changes.outputs.shelltools == 'true'
        run: |
          sudo apt install shellcheck
          yarn lint:shell

      - name: Unit test affected (with code coverage)
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: npx nx affected --target=test --base=origin/main --head=HEAD --pass-with-no-tests --code-coverage=true --watch=false --run-in-band --ci

      - name: Build affected (development)
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: npx nx affected --target=build --base=origin/main --head=HEAD

      - name: Build storybook
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.storybook == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: npx nx run documentation:build-storybook
