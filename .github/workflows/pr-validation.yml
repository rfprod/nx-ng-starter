# This workflow will do a clean install of node dependencies, build the source code and run tests
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: PR validation

on:
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  premerge:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: GitHub CODEOWNERS Validator
        uses: mszostok/codeowners-validator@v0.5.1
        with:
          checks: 'files,duppatterns'
          experimental_checks: 'notowned'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure kernel (increase watchers)
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Get variables (yarn cache directory path, commit hash)
        id: get-variables
        run: echo "::set-output name=yarncachedir::$(yarn cache dir)"; echo "::set-output name=commitsha::$(echo ${GITHUB_SHA})"

      - name: Workspace cache (npm, yarn, nx, jest)
        uses: actions/cache@v2
        id: workspace-cache # use this to check for `cache-hit` (`steps.workspace-cache.outputs.cache-hit != 'true'`)
        env:
          cache-name: workspace-cache
        with:
          path: |
            ~/.npm
            ${{ steps.get-variables.outputs.yarncachedir }}
            **/node_modules
            /tmp/nx
            /tmp/jest_rs
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}-workspace-${{ steps.get-variables.outputs.commitsha }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}-workspace-
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
            ${{ runner.os }}-

      - name: Install global dependencies
        run: npm i -g typescript @angular/cli @nrwl/cli

      - name: Workspace integrity check
        run: yarn workspace:integrity-check

      - name: Install project dependencies
        run: yarn install --frozen-lockfile --ignore-scripts

      - name: Process dependencies with ngcc
        run: yarn ngcc

      - name: Lint affected
        run: npx nx affected --target=lint --base=origin/master --head=HEAD --parallel --maxParallel=2

      - name: Unit test affected (without code coverage)
        run: npx nx affected --target=test --base=origin/master --head=HEAD --passWithNoTests --code-coverage=false --watch=false --run-in-band --ci

      - name: Build all (development)
        run: npx nx affected --target=build --base=origin/master --head=HEAD
