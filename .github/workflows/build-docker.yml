# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build-docker

on:
  workflow_dispatch:
    inputs:
      dry-run:
        type: boolean
        description: 'Dry run, do not push containers to the registry.'
        required: true
        default: false

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.ref_name }}.${{ github.sha }}.build-docker
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Print inputs
        run: |
          echo "Dry run: ${{ github.event.inputs.dry-run }}"

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          compodoc: true
          cypress: true

      - name: Unit test all
        run: |
          npx nx run-many --target test --all --pass-with-no-tests --code-coverage --run-in-band --ci
          npx nx run tools:coverage-stats
          cat ./UNIT_COVERAGE.md

      - name: Build all (production)
        run: |
          yarn generate:env:documentation
          npx nx run-many --target configure-env --all
          npx nx run-many --target build --all --configuration production
          npx nx run-many --target configure-env --all --reset

      - name: Build documentation (compodoc, unit coverage, e2e coverage)
        run: |
          yarn test:reports
          npx nx run tools:compodoc-build
          yarn generate:changelog
          yarn e2e:report || exit 1

      - name: Check repository owner
        id: check-origin
        uses: ./.github/actions/check-origin

      - name: Docker login
        if: ${{ steps.check-origin.outputs.origin == 'true' }}
        run: yarn docker:login "$DOCKER_REGISTRY_USER" "$DOCKER_REGISTRY_ACCESS_TOKEN"
        env:
          DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
          DOCKER_REGISTRY_ACCESS_TOKEN: ${{ secrets.DOCKER_REGISTRY_ACCESS_TOKEN }}

      - name: Docker build apps
        run: |
          yarn docker:build base
          yarn docker:build api production
          yarn docker:build client production
          yarn docker:build elements production
          yarn docker:build documentation

      - name: Docker push apps
        if: ${{ github.event.inputs.dry-run == false && steps.check-origin.outputs.origin == 'true' }}
        run: |
          yarn docker:push base
          yarn docker:push api-production
          yarn docker:push client-production
          yarn docker:push elements-production
          yarn docker:push documentation

      - name: Docker cleanup
        if: always()
        run: |
          yarn docker:cleanup
          docker logout
