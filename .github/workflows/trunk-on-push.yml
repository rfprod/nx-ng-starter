# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: trunk-on-push

on:
  push:
    branches: [main]

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.ref_name }}.${{ github.sha }}.trunk-on-push
  cancel-in-progress: true

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            nx:
              - '.github/workflows/trunk-on-push.yml'
              - '.storybook/**'
              - 'apps/**'
              - 'libs/**'
              - 'tools/generators/**'
              - 'tools/shell/**'
              - 'tools/ts/**'
              - 'tools/*.json'
              - 'tsconfig*'
              - 'nx.json'
              - 'angular.json'
              - 'babel.config.json'
              - 'package.json'
              - 'functions/package.json'
              - 'jest*'
              - '.eslint*'
              - '.prettier*'
              - '.protolint.yaml'
              - '.stylelint*'
            dependencies:
              - 'yarn.lock'
              - 'functions/package-lock.json'
            electron:
              - '.electron/**'
              - 'index.js'
            mobile:
              - 'android/**'
              - 'capacitor.config.json'

      - name: Setup environment
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install global dependencies
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: |
          npm i -g firebase-tools @compodoc/compodoc
          npx cypress install

      - name: Lint all
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: npx nx run-many --target lint --all --parallel --max-parallel 2

      - name: Unit test all (with code coverage)
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: |
          npx nx run-many --target test --all --pass-with-no-tests --code-coverage --run-in-band --ci
          npx nx run tools:coverage-stats
          cat ./tools/ts/UNIT_COVERAGE.md

      - name: Build all (production)
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: |
          yarn generate:env:documentation
          npx nx run-many --target configure-env --all
          npx nx run-many --target build --all --configuration production
          npx nx run-many --target configure-env --all --reset

      - name: Build documentation app assets
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        run: |
          yarn test:reports
          yarn generate:unit-test-coverage-index
          npx nx run tools:compodoc-build
          cp -r ./dist/compodoc ./dist/apps/documentation/assets
          yarn generate:changelog
          yarn e2e:report || exit 1
          yarn generate:e2e-test-report-index
          npx nx run documentation:build-storybook
          cp -r ./dist/storybook/documentation ./dist/apps/documentation/assets/storybook

      - name: Check repository owner
        if: ${{ steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true' }}
        id: check-repo-owner
        uses: ./.github/actions/check-repo-owner

      - name: Deploy client
        if: ${{ (steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true') && steps.check-repo-owner.outputs.origin == 'true' }}
        run: yarn firebase:deploy:ci:client || exit 1
        env:
          FIREBASE_DEPLOY_TOKEN: ${{ secrets.FIREBASE_DEPLOY_TOKEN }}

      - name: Deploy elements
        if: ${{ (steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true') && steps.check-repo-owner.outputs.origin == 'true' }}
        run: |
          bash tools/shell/generate-elements-bootstrap-script.sh ./dist/apps elements
          yarn firebase:deploy:ci:elements || exit 1
        env:
          FIREBASE_DEPLOY_TOKEN: ${{ secrets.FIREBASE_DEPLOY_TOKEN }}

      - name: Deploy documentation
        if: ${{ (steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true') && steps.check-repo-owner.outputs.origin == 'true' }}
        run: yarn firebase:deploy:ci:documentation || exit 1
        env:
          FIREBASE_DEPLOY_TOKEN: ${{ secrets.FIREBASE_DEPLOY_TOKEN }}

      # This job works only with a paid plan such as Blaze (https://firebase.google.com/pricing/)
      # - name: Deploy api
      #   if: ${{ (steps.changes.outputs.nx == 'true' || steps.changes.outputs.dependencies == 'true') && steps.check-repo-owner.outputs.origin == 'true' }}
      #   run: |
      #     npx nx build api --configuration firebase
      #     yarn firebase:deploy:ci:api || exit 1
      #   env:
      #     FIREBASE_DEPLOY_TOKEN: ${{ secrets.FIREBASE_DEPLOY_TOKEN }}

      - name: Cleanup
        run: rm -rf ./.env ./functions/.env
