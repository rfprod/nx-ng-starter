{
  "name": "nx-ng-starter",
  "version": "1.7.6",
  "private": true,
  "description": "Monorepo starter: Nx, Angular, Angular Elements, Electron, NodeJS, NestJS, Firebase.",
  "license": "MIT",
  "author": "rfprod <zoidenmacht@zoho.com>",
  "scripts": {
    "affected": "nx affected",
    "affected:apps": "nx affected:apps",
    "affected:build": "nx affected:build",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected:e2e": "nx affected:e2e",
    "affected:libs": "nx affected:libs",
    "affected:lint": "nx affected:lint",
    "affected:test": "nx affected:test",
    "analyze:circular-deps": "madge --circular --extensions ts ./apps ./libs ./tools --ts-config ./tsconfig.base.json",
    "analyze:client": "yarn build:client:stats; npx webpack-bundle-analyzer ./dist/apps/client/stats.json",
    "analyze:documentation": "yarn build:documentatiosn:stats; npx webpack-bundle-analyzer ./dist/apps/documentation/stats.json",
    "audit:fix": "rm -rf node_module && yarn install --ignore-scripts; npm i --package-lock-only; rm yarn.lock; npm audit fix; yarn import; rm -rf package-lock.json node_modules; yarn install",
    "build:all": "npx nx run-many --target=build --projects=api,client && yarn build:documentation",
    "build:client": "npx nx build client --configuration production",
    "build:client:stats": "npx nx build --stats-json --project client --configuration analyze-bundle",
    "build:documentation": "bash tools/shell/build-docs.sh",
    "build:documentation:stats": "npx nx build --stats-json --project documentation --configuration analyze-bundle",
    "build:electron:client": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml",
    "build:electron:client:all": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml -mwl",
    "build:electron:client:mac": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml --macos",
    "build:electron:client:nix": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml --linux AppImage deb tar.xz",
    "build:electron:client:win": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml --windows",
    "build:elements": "npx nx build elements --configuration production",
    "docker:build": "bash ./tools/shell/docker-build-app.sh",
    "docker:build:api": "npx nx build api --configuration production; yarn docker:build api",
    "docker:build:base": "yarn docker:build base",
    "docker:build:client": "npx nx build server-prod --configuration production; npx nx build client --configuration production; yarn docker:build client production",
    "docker:build:documentation": "npx nx build server-prod --configuration production; npx nx build documentation --configuration production; yarn docker:build documentation production",
    "docker:build:elements": "npx nx build server-prod --configuration production; npx nx build elements --configuration production; yarn docker:build elements production",
    "docker:build:envoy": "bash ./tools/shell/docker-build-app.sh envoy",
    "docker:cleanup": "bash ./tools/shell/docker-task.sh cleanup",
    "docker:login": "bash ./tools/shell/docker-task.sh login",
    "docker:push": "bash ./tools/shell/docker-push.sh",
    "docker:push:envoy": "bash ./tools/shell/docker-push.sh envoy",
    "docker:run": "bash ./tools/shell/docker-run.sh",
    "docker:run:envoy": "bash ./tools/shell/docker-run.sh envoy",
    "e2e": "bash tools/shell/e2e.sh all",
    "e2e:headless": "bash tools/shell/e2e.sh all headless",
    "e2e:headless:report": "bash tools/shell/e2e.sh all headless report",
    "firebase:deploy:ci:all": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN all",
    "firebase:deploy:ci:api": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN api",
    "firebase:deploy:ci:client": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN client",
    "firebase:deploy:ci:documentation": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN documentation",
    "firebase:deploy:ci:elements": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN elements",
    "firebase:deploy:localhost:all": "yarn build:all && bash tools/shell/firebase-deploy.sh localhost all",
    "firebase:deploy:localhost:api": "npx nx build api --configuration firebase && bash tools/shell/firebase-deploy.sh localhost api",
    "firebase:deploy:localhost:client": "yarn build:client && bash tools/shell/firebase-deploy.sh localhost client",
    "firebase:deploy:localhost:documentation": "yarn build:documentation && bash tools/shell/firebase-deploy.sh localhost documentation",
    "firebase:deploy:localhost:elements": "yarn build:elements && bash tools/shell/firebase-deploy.sh localhost elements",
    "generate:changelog": "bash tools/shell/changelog.sh all",
    "generate:client-gql": "npx nx run backend-interfaces:generate-client-definitions",
    "generate:diagrams": "bash tools/shell/diagrams.sh",
    "generate:e2e-test-report-index": "bash tools/shell/generate-e2e-test-report-index.sh",
    "generate:env:documentation": "bash tools/shell/set-documentation-env.sh",
    "generate:proto": "yarn generate:protobufjs; yarn generate:protoc",
    "generate:protobufjs": "bash tools/shell/generate-proto.sh protobufjs",
    "generate:protoc": "bash tools/shell/generate-proto.sh protoc",
    "generate:unit-test-coverage-index": "bash tools/shell/generate-unit-test-coverage-index.sh",
    "postinstall": "husky install && npx sort-package-json && yarn ngcc && node ./decorate-angular-cli.js",
    "install:all:linux": "bash ./tools/shell/install.sh all",
    "install:all:osx": "bash ./tools/shell/install.sh all osx",
    "install:ci": "yarn install --frozen-lockfile",
    "install:global": "bash ./tools/shell/install.sh global",
    "install:project": "bash tools/shell/install.sh project",
    "install:proto:linux": "bash ./tools/shell/install.sh proto",
    "install:proto:linux:ci": "bash ./tools/shell/install.sh proto linux ci",
    "install:proto:osx": "bash ./tools/shell/install.sh proto osx",
    "install:shellcheck:linux": "bash ./tools/shell/install.sh shellcheck",
    "install:shellcheck:linux:ci": "bash ./tools/shell/install.sh shellcheck linux ci",
    "install:shellcheck:osx": "bash ./tools/shell/install.sh shellcheck osx",
    "lint": "bash tools/shell/lint.sh all",
    "lint:changed": "bash tools/shell/lint.sh changed",
    "lint:changed:fix": "bash tools/shell/lint.sh changed fix",
    "lint:fix": "bash tools/shell/lint.sh all fix",
    "lint:html": "yarn lint:html:apps && lint:html:libs",
    "lint:html:apps": "npx prettier -c apps/**/**/**/*.html apps/**/**/**/**/*.html",
    "lint:html:apps:fix": "npx prettier -c --write apps/**/**/**/*.html apps/**/**/**/**/*.html",
    "lint:html:fix": "yarn lint:html:apps:fix && yarn lint:html:libs:fix",
    "lint:html:libs": "npx prettier -c libs/**/**/**/*.html libs/**/**/**/**/*.html libs/**/**/**/**/**/*.html",
    "lint:html:libs:fix": "npx prettier -c --write libs/**/**/**/*.html libs/**/**/**/**/*.html libs/**/**/**/**/**/*.html",
    "lint:proto": "protolint lint -config_path ./.protolint.yaml ./tools/proto/*",
    "lint:scss": "yarn lint:scss:apps; yarn lint:scss:libs",
    "lint:scss:apps": "npx stylelint \"./apps/**/*.scss\" --customSyntax=postcss-scss",
    "lint:scss:apps:fix": "npx stylelint \"./apps/**/*.scss\" --customSyntax=postcss-scss --fix",
    "lint:scss:fix": "yarn lint:scss:apps:fix; yarn lint:scss:libs:fix",
    "lint:scss:libs": "npx stylelint \"./libs/**/*.scss\" --customSyntax=postcss-scss",
    "lint:scss:libs:fix": "npx stylelint \"./libs/**/*.scss\" --customSyntax=postcss-scss --fix",
    "lint:shell": "shellcheck tools/shell/*.sh",
    "lint:ts": "./node_modules/.bin/nx workspace-lint && npx nx lint",
    "lint:ts:fix": "./node_modules/.bin/nx workspace-lint && npx nx lint --fix",
    "ng": "nx",
    "ngcc": "ngcc --tsconfig tsconfig.base.json",
    "nx": "nx",
    "nx:dep-graph": "nx dep-graph",
    "nx:format": "nx format:write",
    "nx:format:check": "nx format:check",
    "nx:format:write": "nx format:write",
    "nx:help": "nx help",
    "sort:json": "npx sort-json package.json && npx sort-package-json",
    "start": "yarn start:api & yarn start:client",
    "start:api": "npx nx serve api",
    "start:client": "npx nx serve client",
    "start:client-server": "npx nx serve server-prod",
    "prestart:electron": "electron-builder install-app-deps",
    "start:electron": "yarn build:client && electron .",
    "start:envoy": "docker-compose -f .envoy/envoy.docker-compose.yml up",
    "start:envoy:api": "yarn start:envoy & npx nx serve api",
    "test": "bash tools/shell/test.sh single-run all",
    "test:changed": "bash tools/shell/test.sh single-run changed",
    "test:coverage": "bash tools/shell/test.sh single-run:coverage all",
    "test:reports": "bash tools/shell/test.sh report",
    "workspace:cleanup": "rm -rf .angular/* documentation/* dist/* coverage/* changelog/* /tmp/nx/nx-ng-starter /tmp/jest_rs/nx-ng-starter",
    "workspace:help": "npx nx run tools:help",
    "workspace:integrity-check": "bash tools/shell/yarn-extension.sh integrity-check",
    "workspace:mmdc": "node ./node_modules/puppeteer/install.js; ./node_modules/.bin/mmdc",
    "workspace:schematic": "nx workspace-schematic",
    "workspace:update": "nx migrate latest",
    "workspace:update:check": "npx nx run tools:update-check",
    "workspace:update:migrate": "npx nx run tools:update-migrate",
    "workspace:update:migrate:bulk-confirm": "npx nx run tools:update-migrate-bulk-confirm",
    "workspace:update:migrate:only": "npx nx run tools:update-migrate-only"
  },
  "config": {
    "commitizen": {
      "maxHeaderWidth": 80,
      "maxLineWidth": 100,
      "minHeaderWidth": 16,
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "resolutions": {
    "colors": "1.4.0",
    "webpack": "5.70.0"
  },
  "dependencies": {
    "@angular/animations": "13.3.0",
    "@angular/cdk": "13.3.1",
    "@angular/common": "13.3.0",
    "@angular/compiler": "13.3.0",
    "@angular/core": "13.3.0",
    "@angular/elements": "13.3.0",
    "@angular/flex-layout": "13.0.0-beta.38",
    "@angular/forms": "13.3.0",
    "@angular/material": "13.3.1",
    "@angular/material-moment-adapter": "13.3.1",
    "@angular/platform-browser": "13.3.0",
    "@angular/platform-browser-dynamic": "13.3.0",
    "@angular/router": "13.3.0",
    "@angular/service-worker": "13.3.0",
    "@apollo/client": "3.5.10",
    "@grpc/grpc-js": "1.5.10",
    "@grpc/proto-loader": "0.6.9",
    "@improbable-eng/grpc-web": "0.15.0",
    "@nestjs/apollo": "10.0.8",
    "@nestjs/axios": "0.0.7",
    "@nestjs/common": "8.4.3",
    "@nestjs/core": "8.4.3",
    "@nestjs/graphql": "10.0.8",
    "@nestjs/jwt": "8.0.0",
    "@nestjs/microservices": "8.4.3",
    "@nestjs/passport": "8.2.1",
    "@nestjs/platform-express": "8.4.3",
    "@nestjs/platform-ws": "8.4.3",
    "@nestjs/serve-static": "2.2.2",
    "@nestjs/websockets": "8.4.3",
    "apollo-angular": "3.0.0",
    "apollo-server-express": "3.6.6",
    "apollo-upload-client": "17.0.0",
    "class-transformer": "0.5.1",
    "class-validator": "0.13.2",
    "compression": "1.7.4",
    "core-js": "3.21.1",
    "dotenv": "16.0.0",
    "electron-squirrel-startup": "1.0.0",
    "express": "4.17.3",
    "graphql": "16.3.0",
    "graphql-subscriptions": "2.0.0",
    "graphql-tools": "8.2.3",
    "graphql-upload": "13.0.0",
    "grpc-web": "1.3.1",
    "isomorphic-fetch": "3.0.0",
    "reflect-metadata": "0.1.13",
    "rxjs": "7.5.5",
    "tslib": "2.3.1",
    "zone.js": "0.11.5"
  },
  "devDependencies": {
    "@angular-devkit/architect": "0.1303.0",
    "@angular-devkit/build-angular": "13.3.0",
    "@angular-devkit/core": "13.3.0",
    "@angular-devkit/schematics": "13.3.0",
    "@angular-eslint/builder": "13.1.0",
    "@angular-eslint/eslint-plugin": "13.1.0",
    "@angular-eslint/eslint-plugin-template": "13.1.0",
    "@angular-eslint/schematics": "13.1.0",
    "@angular-eslint/template-parser": "13.1.0",
    "@angular/cli": "13.3.0",
    "@angular/compiler-cli": "13.3.0",
    "@angular/language-service": "13.3.0",
    "@capacitor/android": "3.4.3",
    "@capacitor/cli": "3.4.3",
    "@capacitor/core": "3.4.3",
    "@commitlint/cli": "16.2.3",
    "@commitlint/config-conventional": "16.2.1",
    "@graphql-codegen/cli": "2.6.2",
    "@graphql-codegen/typescript": "2.4.8",
    "@graphql-codegen/typescript-apollo-angular": "3.4.7",
    "@graphql-codegen/typescript-operations": "2.3.5",
    "@mermaid-js/mermaid-cli": "8.14.0",
    "@nestjs/schematics": "8.0.8",
    "@nestjs/testing": "8.4.3",
    "@ngneat/until-destroy": "9.0.1",
    "@ngx-translate/core": "14.0.0",
    "@ngxs/form-plugin": "3.7.3",
    "@ngxs/logger-plugin": "3.7.3",
    "@ngxs/router-plugin": "3.7.3",
    "@ngxs/schematics": "0.0.1-alpha.5",
    "@ngxs/storage-plugin": "3.7.3",
    "@ngxs/store": "3.7.3",
    "@nrwl/angular": "13.9.5",
    "@nrwl/cypress": "13.9.5",
    "@nrwl/devkit": "13.9.5",
    "@nrwl/eslint-plugin-nx": "13.9.5",
    "@nrwl/jest": "13.9.5",
    "@nrwl/linter": "13.9.5",
    "@nrwl/nest": "13.9.5",
    "@nrwl/node": "13.9.5",
    "@nrwl/storybook": "13.9.5",
    "@nrwl/web": "13.9.5",
    "@nrwl/workspace": "13.9.5",
    "@sentry/angular": "6.19.2",
    "@sentry/tracing": "6.19.2",
    "@storybook/addon-essentials": "6.5.0-alpha.34",
    "@storybook/addon-links": "6.5.0-alpha.34",
    "@storybook/addons": "6.5.0-alpha.34",
    "@storybook/angular": "6.5.0-alpha.34",
    "@storybook/builder-webpack5": "6.5.0-alpha.34",
    "@storybook/manager-webpack5": "6.5.0-alpha.34",
    "@storybook/theming": "6.5.0-alpha.34",
    "@types/apollo-upload-client": "17.0.0",
    "@types/compression": "1.7.2",
    "@types/d3": "7.1.0",
    "@types/express": "4.17.13",
    "@types/google-protobuf": "3.15.5",
    "@types/graphql-upload": "8.0.11",
    "@types/hammerjs": "2.0.41",
    "@types/jest": "27.4.1",
    "@types/jsdom": "16.2.14",
    "@types/marked": "4.0.3",
    "@types/node": "17.0.23",
    "@types/readline-sync": "1.4.4",
    "@types/websocket": "1.0.5",
    "@types/ws": "8.5.3",
    "@typescript-eslint/eslint-plugin": "5.16.0",
    "@typescript-eslint/parser": "5.16.0",
    "@ungap/custom-elements": "1.0.2",
    "@webcomponents/custom-elements": "1.5.0",
    "@webcomponents/webcomponentsjs": "2.6.0",
    "babel-loader": "8.2.4",
    "codelyzer": "6.0.2",
    "commitizen": "4.2.4",
    "copy-webpack-plugin": "10.2.4",
    "cypress": "9.5.2",
    "cypress-multi-reporters": "1.5.0",
    "d3": "7.3.0",
    "electron": "17.2.0",
    "electron-builder": "22.14.13",
    "eslint": "8.12.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-plugin-compat": "4.0.2",
    "eslint-plugin-cypress": "2.12.1",
    "eslint-plugin-eslint-comments": "3.2.0",
    "eslint-plugin-prettier": "4.0.0",
    "eslint-plugin-rxjs": "5.0.2",
    "eslint-plugin-simple-import-sort": "7.0.0",
    "eslint-plugin-unicorn": "41.0.1",
    "firebase": "9.6.10",
    "firebase-admin": "10.0.2",
    "firebase-functions": "3.19.0",
    "google-protobuf": "3.19.4",
    "graphql-tag": "2.12.6",
    "hammerjs": "2.0.8",
    "husky": "7.0.4",
    "jest": "27.5.1",
    "jest-preset-angular": "11.1.1",
    "marked": "4.0.12",
    "material-design-icon-fonts-self-hosted-web": "1.0.6",
    "memo-decorator": "2.0.1",
    "mini-css-extract-plugin": "2.6.0",
    "mocha": "9.2.2",
    "mochawesome": "7.1.3",
    "mochawesome-merge": "4.2.1",
    "moment": "2.29.1",
    "ng-packagr": "13.3.0",
    "ngx-markdown": "13.1.0",
    "nx": "13.9.5",
    "postcss": "8.4.12",
    "postcss-import": "14.1.0",
    "postcss-preset-env": "7.4.3",
    "postcss-url": "10.1.3",
    "prettier": "2.6.1",
    "prettier-stylelint": "0.4.2",
    "protobufjs": "6.11.2",
    "readline-sync": "1.4.10",
    "roboto-fontface": "0.10.0",
    "sort-json": "2.0.1",
    "sort-package-json": "1.55.0",
    "source-map-loader": "3.0.1",
    "stylelint": "14.6.1",
    "stylelint-config-prettier": "9.0.3",
    "stylelint-config-rational-order": "0.1.2",
    "stylelint-prettier": "2.0.0",
    "terser-webpack-plugin": "5.3.1",
    "ts-jest": "27.1.4",
    "ts-node": "10.7.0",
    "typescript": "4.5.5",
    "web-animations-js": "2.3.2",
    "webpack": "5.70.0",
    "webpack-bundle-analyzer": "4.5.0",
    "webpack-dev-server": "4.7.4",
    "webpack-merge": "5.8.0",
    "webpack-node-externals": "3.0.0",
    "webpack-sources": "3.2.3"
  },
  "engines": {
    "node": ">=16.14.1",
    "npm": ">=8.5.5"
  }
}
