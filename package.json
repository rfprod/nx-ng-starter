{
  "name": "nx-ng-starter",
  "version": "7.5.5",
  "private": true,
  "description": "Monorepo starter: Nx, Angular, Angular Elements, Electron, NodeJS, NestJS, Firebase.",
  "license": "MIT",
  "author": "rfprod <zoidenmacht@zoho.com>",
  "scripts": {
    "affected:build": "nx affected:build",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected:e2e": "nx affected:e2e",
    "affected:lint": "nx affected:lint",
    "affected:print": "nx print-affected --select=projects",
    "affected:print-apps": "nx print-affected --type=app --select=projects",
    "affected:print-libs": "nx print-affected --type=lib --select=projects",
    "affected:test": "nx affected:test",
    "analyze:circular-deps": "madge --circular --extensions ts ./apps ./libs ./tools --ts-config ./tsconfig.base.json",
    "analyze:client": "yarn build:client:stats; npx webpack-bundle-analyzer ./dist/apps/client/stats.json",
    "analyze:documentation": "yarn build:documentatiosn:stats; npx webpack-bundle-analyzer ./dist/apps/documentation/stats.json",
    "audit:fix": "rm -rf node_module && yarn install --ignore-scripts; npm i --package-lock-only; rm yarn.lock; npm audit fix; yarn import; rm -rf package-lock.json node_modules; yarn install",
    "build:all": "npx nx run-many --target=build --projects=api,client && yarn build:documentation",
    "prebuild:client": "npx nx run client:configure-env",
    "build:client": "npx nx build client --configuration production",
    "postbuild:client": "npx nx run client:configure-env --reset",
    "build:client:stats": "npx nx build --stats-json --project client --configuration analyze-bundle",
    "build:documentation": "bash tools/shell/build-docs.sh",
    "build:documentation:stats": "npx nx build --stats-json --project documentation --configuration analyze-bundle",
    "build:electron:client": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml",
    "build:electron:client:all": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml -mwl",
    "build:electron:client:mac": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml --macos",
    "build:electron:client:nix": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml --linux AppImage deb tar.xz",
    "build:electron:client:win": "yarn build:client && electron-builder -c .electron/electron-builder.client.yml --windows",
    "prebuild:elements": "npx nx run elements:configure-env",
    "build:elements": "npx nx build elements --configuration production",
    "postbuild:elements": "npx nx run elements:configure-env --reset",
    "docker:build": "bash ./tools/shell/docker/build.sh",
    "docker:build:api": "npx nx build api --configuration production; yarn docker:build api",
    "docker:build:base": "yarn docker:build base",
    "docker:build:client": "npx nx build server-prod --configuration production; npx nx build client --configuration production; yarn docker:build client production",
    "docker:build:documentation": "npx nx build server-prod --configuration production; npx nx build documentation --configuration production; yarn docker:build documentation production",
    "docker:build:elements": "npx nx build server-prod --configuration production; npx nx build elements --configuration production; yarn docker:build elements production",
    "docker:build:envoy": "bash ./tools/shell/docker/build.sh envoy",
    "docker:cleanup": "bash ./tools/shell/docker/task.sh cleanup",
    "docker:login": "bash ./tools/shell/docker/task.sh login",
    "docker:push": "bash ./tools/shell/docker/push.sh",
    "docker:push:envoy": "bash ./tools/shell/docker/push.sh envoy",
    "docker:run": "bash ./tools/shell/docker/run.sh",
    "docker:run:envoy": "bash ./tools/shell/docker/run.sh envoy",
    "e2e": "npx nx run-many --target e2e --all",
    "firebase:deploy:ci:all": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN all",
    "firebase:deploy:ci:api": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN api",
    "firebase:deploy:ci:client": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN client",
    "firebase:deploy:ci:documentation": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN documentation",
    "firebase:deploy:ci:elements": "bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN elements",
    "firebase:deploy:localhost:all": "yarn build:all && bash tools/shell/firebase-deploy.sh localhost all",
    "firebase:deploy:localhost:api": "npx nx build api --configuration firebase && bash tools/shell/firebase-deploy.sh localhost api",
    "firebase:deploy:localhost:client": "yarn build:client && bash tools/shell/firebase-deploy.sh localhost client",
    "firebase:deploy:localhost:documentation": "yarn build:documentation && bash tools/shell/firebase-deploy.sh localhost documentation",
    "firebase:deploy:localhost:elements": "yarn build:elements && bash tools/shell/firebase-deploy.sh localhost elements",
    "generate:changelog": "bash tools/shell/changelog.sh all",
    "generate:client-gql": "npx nx run backend-interfaces:generate-client-definitions",
    "generate:diagrams": "bash tools/shell/diagrams.sh",
    "generate:e2e-test-report-index": "bash tools/shell/generate-e2e-test-report-index.sh",
    "generate:env:documentation": "bash tools/shell/set-documentation-env.sh",
    "generate:proto": "yarn generate:protobufjs; yarn generate:protoc",
    "generate:protobufjs": "bash tools/shell/generate-proto.sh protobufjs",
    "generate:protoc": "bash tools/shell/generate-proto.sh protoc",
    "generate:unit-test-coverage-index": "bash tools/shell/generate-unit-test-coverage-index.sh",
    "help": "nx help",
    "postinstall": "husky install && npx sort-json package.json && npx sort-package-json && node ./decorate-angular-cli.js && npx nx run tools:compile-executors",
    "install:all:linux": "bash ./tools/shell/install.sh all",
    "install:all:osx": "bash ./tools/shell/install.sh all osx",
    "install:ci": "yarn install --frozen-lockfile",
    "install:global": "bash ./tools/shell/install.sh global",
    "install:project": "bash tools/shell/install.sh project",
    "install:proto:linux": "bash ./tools/shell/install.sh proto",
    "install:proto:linux:ci": "bash ./tools/shell/install.sh proto linux ci",
    "install:proto:osx": "bash ./tools/shell/install.sh proto osx",
    "install:shellcheck:linux": "bash ./tools/shell/install.sh shellcheck",
    "install:shellcheck:linux:ci": "bash ./tools/shell/install.sh shellcheck linux ci",
    "install:shellcheck:osx": "bash ./tools/shell/install.sh shellcheck osx",
    "lint": "yarn lint:ts; yarn lint:html; yarn lint:scss; yarn lint:proto",
    "lint:html": "npx nx run-many --target prettier-check --all",
    "lint:proto": "protolint lint -config_path ./.protolint.yaml ./tools/proto/*",
    "lint:scss": "npx nx run-many --target stylelint-check --all",
    "lint:ts": "npx nx run-many --target lint --all",
    "ng": "nx",
    "nx": "nx",
    "start": "yarn start:api & yarn start:client",
    "start:api": "npx nx serve api",
    "prestart:client": "npx nx run client:configure-env",
    "start:client": "yarn start:dev-server & npx nx serve client",
    "start:client-server": "npx nx serve server-prod",
    "start:dev-server": "npx nx serve server-dev --configuration production",
    "prestart:documentation": "npx nx run documentation:configure-env",
    "start:documentation": "yarn start:dev-server & npx nx serve documentation",
    "prestart:electron": "electron-builder install-app-deps",
    "start:electron": "yarn build:client && electron .electron/",
    "prestart:elements": "npx nx run elements:configure-env",
    "start:elements": "yarn start:dev-server & npx nx serve elements",
    "test": "npx nx run-many --target test --all --run-in-band",
    "workspace:cleanup": "rm -rf .angular/* documentation/* dist/* coverage/* changelog/* tmp/ /tmp/nx/nx-ng-starter /tmp/jest_rs/nx-ng-starter",
    "workspace:integrity-check": "bash tools/shell/yarn-extension.sh integrity-check",
    "workspace:mmdc": "node ./node_modules/puppeteer/install.js; ./node_modules/.bin/mmdc"
  },
  "config": {
    "commitizen": {
      "maxHeaderWidth": 80,
      "maxLineWidth": 100,
      "minHeaderWidth": 16,
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "resolutions": {
    "colors": "1.4.0",
    "semver": ">=7.5.3",
    "webpack": "5.88.2",
    "word-wrap": ">=1.2.4"
  },
  "dependencies": {
    "@angular/animations": "16.2.7",
    "@angular/cdk": "16.2.6",
    "@angular/common": "16.2.7",
    "@angular/compiler": "16.2.7",
    "@angular/core": "16.2.7",
    "@angular/elements": "16.2.7",
    "@angular/forms": "16.2.7",
    "@angular/material": "16.2.6",
    "@angular/material-moment-adapter": "16.2.6",
    "@angular/platform-browser": "16.2.7",
    "@angular/platform-browser-dynamic": "16.2.7",
    "@angular/router": "16.2.7",
    "@angular/service-worker": "16.2.7",
    "@apollo/client": "3.8.4",
    "@apollo/server": "4.9.3",
    "@grpc/grpc-js": "1.9.4",
    "@grpc/proto-loader": "0.7.10",
    "@improbable-eng/grpc-web": "0.15.0",
    "@nestjs/apollo": "12.0.9",
    "@nestjs/axios": "3.0.0",
    "@nestjs/cache-manager": "2.1.0",
    "@nestjs/common": "10.2.6",
    "@nestjs/config": "3.1.1",
    "@nestjs/core": "10.2.6",
    "@nestjs/graphql": "12.0.9",
    "@nestjs/jwt": "10.1.1",
    "@nestjs/microservices": "10.2.6",
    "@nestjs/passport": "10.0.2",
    "@nestjs/platform-express": "10.2.6",
    "@nestjs/platform-ws": "10.2.6",
    "@nestjs/serve-static": "4.0.0",
    "@nestjs/swagger": "7.1.12",
    "@nestjs/throttler": "5.0.0",
    "@nestjs/websockets": "10.2.6",
    "apollo-angular": "5.0.2",
    "apollo-upload-client": "17.0.0",
    "cache-manager": "5.2.3",
    "class-transformer": "0.5.1",
    "class-validator": "0.14.0",
    "compression": "1.7.4",
    "core-js": "3.33.0",
    "dotenv": "16.3.1",
    "electron-squirrel-startup": "1.0.0",
    "express": "4.18.2",
    "graphql": "16.8.1",
    "graphql-subscriptions": "2.0.0",
    "graphql-tools": "9.0.0",
    "graphql-upload": "16.0.2",
    "grpc-web": "1.4.2",
    "isomorphic-fetch": "3.0.0",
    "reflect-metadata": "0.1.13",
    "rxjs": "7.8.1",
    "tslib": "2.6.2",
    "zone.js": "0.13.3"
  },
  "devDependencies": {
    "@actions/core": "1.10.1",
    "@angular-devkit/architect": "0.1602.4",
    "@angular-devkit/build-angular": "16.2.4",
    "@angular-devkit/core": "16.2.4",
    "@angular-devkit/schematics": "16.2.4",
    "@angular-eslint/builder": "16.2.0",
    "@angular-eslint/eslint-plugin": "16.2.0",
    "@angular-eslint/eslint-plugin-template": "16.2.0",
    "@angular-eslint/schematics": "16.2.0",
    "@angular-eslint/template-parser": "16.2.0",
    "@angular/cli": "16.2.4",
    "@angular/compiler-cli": "16.2.7",
    "@angular/language-service": "16.2.7",
    "@capacitor/android": "5.4.1",
    "@capacitor/cli": "5.4.1",
    "@capacitor/core": "5.4.1",
    "@commitlint/cli": "17.7.2",
    "@commitlint/config-conventional": "17.7.0",
    "@graphql-codegen/cli": "5.0.0",
    "@graphql-codegen/typescript": "4.0.1",
    "@graphql-codegen/typescript-apollo-angular": "4.0.0",
    "@graphql-codegen/typescript-operations": "4.0.1",
    "@mermaid-js/mermaid-cli": "10.4.0",
    "@nestjs/schematics": "10.0.2",
    "@nestjs/testing": "10.2.6",
    "@ngrx/effects": "16.2.0",
    "@ngrx/router-store": "16.2.0",
    "@ngrx/store": "16.2.0",
    "@ngx-translate/core": "15.0.0",
    "@nx/angular": "16.9.1",
    "@nx/cypress": "16.9.1",
    "@nx/devkit": "16.9.1",
    "@nx/eslint-plugin": "16.9.1",
    "@nx/jest": "16.9.1",
    "@nx/js": "16.9.1",
    "@nx/linter": "16.9.1",
    "@nx/nest": "16.9.1",
    "@nx/node": "16.9.1",
    "@nx/plugin": "16.9.1",
    "@nx/storybook": "16.9.1",
    "@nx/workspace": "16.9.1",
    "@schematics/angular": "16.2.4",
    "@sentry/angular-ivy": "7.72.0",
    "@sentry/tracing": "7.72.0",
    "@storybook/addon-controls": "7.4.5",
    "@storybook/angular": "7.4.5",
    "@storybook/core-server": "7.4.5",
    "@storybook/manager-api": "7.4.5",
    "@storybook/preview-api": "7.4.5",
    "@storybook/theming": "7.4.5",
    "@swc-node/register": "1.6.8",
    "@swc/cli": "0.1.62",
    "@swc/core": "1.3.91",
    "@swc/helpers": "0.5.2",
    "@types/apollo-upload-client": "17.0.3",
    "@types/compression": "1.7.3",
    "@types/d3": "7.4.1",
    "@types/express": "4.17.18",
    "@types/google-protobuf": "3.15.7",
    "@types/graphql-upload": "16.0.2",
    "@types/hammerjs": "2.0.42",
    "@types/jest": "29.5.5",
    "@types/jsdom": "21.1.3",
    "@types/marked": "5.0.2",
    "@types/node": "20.8.0",
    "@types/readline-sync": "1.4.5",
    "@types/websocket": "1.0.7",
    "@types/ws": "8.5.6",
    "@typescript-eslint/eslint-plugin": "6.7.3",
    "@typescript-eslint/parser": "6.7.3",
    "@ungap/custom-elements": "1.3.0",
    "@webcomponents/custom-elements": "1.6.0",
    "@webcomponents/webcomponentsjs": "2.8.0",
    "babel-loader": "9.1.3",
    "commitizen": "4.3.0",
    "copy-webpack-plugin": "11.0.0",
    "cypress": "13.3.0",
    "cypress-multi-reporters": "1.6.3",
    "d3": "7.8.5",
    "electron": "26.2.4",
    "electron-builder": "24.6.4",
    "eslint": "8.50.0",
    "eslint-config-prettier": "9.0.0",
    "eslint-plugin-compat": "4.2.0",
    "eslint-plugin-cypress": "2.15.1",
    "eslint-plugin-eslint-comments": "3.2.0",
    "eslint-plugin-no-unsanitized": "4.0.2",
    "eslint-plugin-prettier": "5.0.0",
    "eslint-plugin-rxjs": "5.0.3",
    "eslint-plugin-simple-import-sort": "10.0.0",
    "eslint-plugin-storybook": "0.6.14",
    "eslint-plugin-unicorn": "48.0.1",
    "firebase": "10.4.0",
    "firebase-admin": "11.11.0",
    "firebase-functions": "4.4.1",
    "google-protobuf": "3.21.2",
    "graphql-tag": "2.12.6",
    "hammerjs": "2.0.8",
    "husky": "8.0.3",
    "jasmine-marbles": "0.9.2",
    "jest": "29.7.0",
    "jest-environment-jsdom": "29.7.0",
    "jest-environment-node": "29.7.0",
    "jest-preset-angular": "13.1.2",
    "jsonc-eslint-parser": "2.3.0",
    "marked": "9.0.3",
    "material-design-icon-fonts-self-hosted-web": "1.0.7",
    "memo-decorator": "2.0.1",
    "mini-css-extract-plugin": "2.7.6",
    "mocha": "10.2.0",
    "mochawesome": "7.1.3",
    "mochawesome-merge": "4.3.0",
    "moment": "2.29.4",
    "ng-packagr": "16.2.3",
    "ngx-markdown": "16.0.0",
    "nx": "16.9.1",
    "postcss": "8.4.31",
    "postcss-import": "15.1.0",
    "postcss-preset-env": "9.1.4",
    "postcss-url": "10.1.3",
    "prettier": "3.0.3",
    "prettier-stylelint": "0.4.2",
    "protobufjs": "7.2.5",
    "readline-sync": "1.4.10",
    "roboto-fontface": "0.10.0",
    "sort-json": "2.0.1",
    "sort-package-json": "2.6.0",
    "source-map-loader": "4.0.1",
    "storybook": "7.4.5",
    "stylelint": "15.10.3",
    "stylelint-config-prettier": "9.0.5",
    "stylelint-config-rational-order": "0.1.2",
    "stylelint-prettier": "4.0.2",
    "terser-webpack-plugin": "5.3.9",
    "ts-jest": "29.1.1",
    "ts-node": "10.9.1",
    "typescript": "5.1.3",
    "util": "0.12.5",
    "web-animations-js": "2.3.2",
    "webpack": "5.88.2",
    "webpack-bundle-analyzer": "4.9.1",
    "webpack-dev-server": "4.15.1",
    "webpack-merge": "5.9.0",
    "webpack-node-externals": "3.0.0",
    "webpack-sources": "3.2.3"
  },
  "engines": {
    "node": ">=18.17.1",
    "npm": ">=9.8.1"
  }
}
