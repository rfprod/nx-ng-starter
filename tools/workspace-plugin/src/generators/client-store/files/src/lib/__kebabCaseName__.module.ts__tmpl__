import { ModuleWithProviders, NgModule } from '@angular/core';
import { EffectsModule } from '@ngrx/effects';
import { StoreModule } from '@ngrx/store';

import { App<%= pascalCaseName %>Effects } from './<%= kebabCaseName %>.effects';
import { <%= camelCaseName %>ReducerConfig, I<%= pascalCaseName %>State } from './<%= kebabCaseName %>.interface';
import { <%= camelCaseName %>ReducerProvider } from './<%= kebabCaseName %>.reducer';

@NgModule({
  imports: [StoreModule.forFeature<I<%= pascalCaseName %>State>(<%= camelCaseName %>ReducerConfig.featureName, <%= camelCaseName %>ReducerConfig.token), EffectsModule.forFeature([App<%= pascalCaseName %>Effects])],
})
export class App<%= pascalCaseName %>StoreModule {
  public static forRoot(): ModuleWithProviders<App<%= pascalCaseName %>StoreModule> {
    return {
      ngModule: App<%= pascalCaseName %>StoreModule,
      providers: [<%= camelCaseName %>ReducerProvider],
    };
  }
}
