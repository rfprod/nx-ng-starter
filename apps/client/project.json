{
  "name": "client",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "prefix": "app",
  "projectType": "application",
  "sourceRoot": "apps/client/src",
  "tags": ["scope:client", "type:application"],
  "targets": {
    "build": {
      "configurations": {
        "analyze-bundle": {
          "buildOptimizer": true,
          "fileReplacements": [
            {
              "replace": "apps/client/src/environments/environment.ts",
              "with": "apps/client/src/environments/environment.prod.ts"
            }
          ],
          "optimization": true,
          "outputHashing": "all"
        },
        "production": {
          "buildOptimizer": true,
          "fileReplacements": [
            {
              "replace": "apps/client/src/environments/environment.ts",
              "with": "apps/client/src/environments/environment.prod.ts"
            }
          ],
          "ngswConfigPath": "apps/client/ngsw-config.json",
          "optimization": true,
          "outputHashing": "all",
          "serviceWorker": true,
          "sourceMap": false
        }
      },
      "executor": "@angular-devkit/build-angular:browser",
      "options": {
        "allowedCommonJsDependencies": [
          "hammerjs",
          "memo-decorator",
          "moment",
          "google-protobuf/google/protobuf/any_pb.js",
          "protobufjs/minimal",
          "zen-observable",
          "apollo-upload-client",
          "extract-files/public/isExtractableFile",
          "extract-files/public/extractFiles",
          "graphql-tag",
          "subscriptions-transport-ws"
        ],
        "aot": true,
        "assets": [
          "apps/client/src/favicon.ico",
          "apps/client/src/assets",
          "apps/client/src/manifest.webmanifest",
          {
            "glob": "**/*",
            "input": "./libs/client-core/src/lib/assets",
            "output": "./assets"
          }
        ],
        "baseHref": "/",
        "budgets": [
          {
            "maximumError": "15mb",
            "maximumWarning": "12mb",
            "type": "initial"
          },
          {
            "maximumError": "10kb",
            "maximumWarning": "6kb",
            "type": "anyComponentStyle"
          }
        ],
        "buildOptimizer": false,
        "index": "apps/client/src/index.html",
        "main": "apps/client/src/main.ts",
        "namedChunks": true,
        "optimization": false,
        "outputHashing": "none",
        "outputPath": "dist/apps/client",
        "polyfills": "apps/client/src/polyfills.ts",
        "scripts": ["node_modules/dompurify/dist/purify.min.js", "tools/js/trusted-types.policy.js"],
        "sourceMap": true,
        "styles": [
          "node_modules/roboto-fontface/css/roboto/roboto-fontface.css",
          "node_modules/material-design-icon-fonts-self-hosted-web/iconfont/material-icons.css",
          "apps/client/src/styles.scss",
          "libs/client-core/src/lib/styles/styles.scss"
        ],
        "tsConfig": "apps/client/tsconfig.app.json",
        "vendorChunk": true
      }
    },
    "configure-env": {
      "executor": "./tools/executors/client-env:configure",
      "options": {
        "app": "client"
      }
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "client:build"
      }
    },
    "lint": {
      "executor": "@angular-eslint/builder:lint",
      "options": {
        "eslintConfig": "apps/client/.eslintrc.json",
        "lintFilePatterns": ["apps/client/**/*.ts", "apps/client/**/*.html"]
      },
      "outputs": ["{options.outputFile}"]
    },
    "prettier-check": {
      "executor": "./tools/executors/prettier:check",
      "options": {
        "config": ""
      },
      "outputs": ["{workspaceRoot}/dist/prettier/apps/client"]
    },
    "serve": {
      "configurations": {
        "production": {
          "browserTarget": "client:build:production"
        }
      },
      "executor": "@angular-devkit/build-angular:dev-server",
      "options": {
        "browserTarget": "client:build",
        "proxyConfig": "apps/client/proxy.conf.json"
      }
    },
    "stylelint-check": {
      "executor": "./tools/executors/stylelint:check",
      "options": {
        "config": ""
      },
      "outputs": ["{workspaceRoot}/dist/stylelint/apps/client"]
    },
    "test": {
      "executor": "@nx/jest:jest",
      "options": {
        "jestConfig": "apps/client/jest.config.ts",
        "passWithNoTests": true
      },
      "outputs": ["{workspaceRoot}/coverage/libs/client"]
    },
    "tsc-check": {
      "executor": "./tools/executors/tsc:check",
      "options": {
        "tsConfig": "apps/client/tsconfig.app.json"
      },
      "outputs": ["{workspaceRoot}/dist/out-tsc/apps/client"]
    }
  }
}
